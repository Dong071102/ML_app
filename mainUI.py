# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QTimer, pyqtSignal, QObject,QMetaObject, pyqtSlot
from PyQt5.QtGui import QPixmap, QFont, QIcon
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox,QLabel, QTextEdit
import io
from PIL import Image
from concurrent.futures import ThreadPoolExecutor
import re
from model.generative_image import TextToImageGenerator
from model.text_summarizer import TextSummarizer
from model.generative_question import QuestionAnswerGenerator
class Ui_MainWindow(object):
    image_model=TextToImageGenerator()
    text_summarizer_model=TextSummarizer()
    question_model=QuestionAnswerGenerator()
    executor = ThreadPoolExecutor(max_workers=1)
    def setupUi(self, MainWindow):
        self.image_model_loaded = False
        self.question_model_loaded = False
        self.mgs = QMessageBox()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(880, 596)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(-10, 0, 881, 571))
        self.tabWidget.setMinimumSize(QtCore.QSize(881, 0))
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setAccessibleName("")
        self.tab1.setObjectName("tab1")
        self.line = QtWidgets.QFrame(self.tab1)
        self.line.setGeometry(QtCore.QRect(540, 20, 20, 511))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(3)
        self.line.setMidLineWidth(5)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setObjectName("line")
        self.image_label = QtWidgets.QLabel(self.tab1)
        self.image_label.setGeometry(QtCore.QRect(20, 20, 512, 512))
        self.image_label.setMinimumSize(QtCore.QSize(512, 512))
        self.image_label.setBaseSize(QtCore.QSize(512, 512))
        self.image_label.setStyleSheet("border: 1px solid green;\n"
"background-color: rgb(189, 244, 209);\n"
"border-color: rgb(39, 174, 96);")
        self.image_label.setTextFormat(QtCore.Qt.AutoText)
        self.image_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_label.setObjectName("image_label")
        self.widget = QtWidgets.QWidget(self.tab1)
        self.widget.setGeometry(QtCore.QRect(570, 20, 291, 511))
        self.widget.setObjectName("widget")
        self.install_image_btn = QtWidgets.QPushButton(self.widget)
        self.install_image_btn.setGeometry(QtCore.QRect(0, 190, 291, 51))
        self.install_image_btn.setWhatsThis("")
        self.install_image_btn.setStyleSheet("appearance: none;\n"
"backface-visibility: hidden;\n"
"background-color: rgb(194, 251, 215);\n"
"border: 2px solid #005500;\n"
"border-radius: 8px;\n"
"box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"box-sizing: border-box;\n"
"color: #005500;\n"
"cursor: pointer;\n"
"display: inline-block;\n"
"font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"font-size: 16px;\n"
"font-weight: 600;\n"
"letter-spacing: normal;\n"
"line-height: 1.5;\n"
"outline: none;\n"
"overflow: hidden;\n"
"padding: 13px 20px;\n"
"position: relative;\n"
"text-align: center;\n"
"text-decoration: none;\n"
"transform: translate3d(0, 0, 0);\n"
"transition: all .3s;\n"
"user-select: none;\n"
"-webkit-user-select: none;\n"
"touch-action: manipulation;\n"
"vertical-align: top;\n"
"white-space: nowrap;\n"
"")
        self.install_image_btn.setObjectName("install_image_btn")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.widget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 260, 291, 251))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.line_4 = QtWidgets.QFrame(self.verticalLayoutWidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout.addWidget(self.line_4)
        self.text_image_input = QtWidgets.QTextEdit(self.verticalLayoutWidget)
        self.text_image_input.setObjectName("text_image_input")
        self.text_image_input.setLineWrapMode(QTextEdit.WidgetWidth)
        self.verticalLayout.addWidget(self.text_image_input)
        self.submit_image = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.submit_image.setMinimumSize(QtCore.QSize(0, 40))
        self.submit_image.setStyleSheet("  appearance: none;\n"
"  backface-visibility: hidden;\n"
"  background-color: #27ae60;\n"
"  border-radius: 8px;\n"
"  border-style: none;\n"
"  box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"  box-sizing: border-box;\n"
"  color: #fff;\n"
"  cursor: pointer;\n"
"  display: inline-block;\n"
"  font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"  font-size: 16px;\n"
"  font-weight: 600;\n"
"  letter-spacing: normal;\n"
"  line-height: 1.5;\n"
"  outline: none;\n"
"  overflow: hidden;\n"
"  padding: 13px 20px;\n"
"  position: relative;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  transform: translate3d(0, 0, 0);\n"
"  transition: all .3s;\n"
"  user-select: none;\n"
"  -webkit-user-select: none;\n"
"  touch-action: manipulation;\n"
"  vertical-align: top;\n"
"  white-space: nowrap;")
        self.submit_image.setObjectName("submit_image")
        self.verticalLayout.addWidget(self.submit_image)
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setGeometry(QtCore.QRect(0, 0, 301, 61))
        self.label_5.setObjectName("label_5")
        self.line_5 = QtWidgets.QFrame(self.widget)
        self.line_5.setGeometry(QtCore.QRect(0, 240, 291, 20))
        self.line_5.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_5.setLineWidth(3)
        self.line_5.setMidLineWidth(0)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setObjectName("line_5")
        self.label_13 = QtWidgets.QLabel(self.widget)
        self.label_13.setGeometry(QtCore.QRect(0, 60, 291, 111))
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.tabWidget.addTab(self.tab1, "")
        self.question = QtWidgets.QWidget()
        self.question.setObjectName("question")
        self.line_2 = QtWidgets.QFrame(self.question)
        self.line_2.setGeometry(QtCore.QRect(540, 20, 20, 511))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(3)
        self.line_2.setMidLineWidth(5)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setObjectName("line_2")
        self.text_question_area = QtWidgets.QScrollArea(self.question)
        self.text_question_area.setGeometry(QtCore.QRect(20, 20, 511, 511))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_question_area.sizePolicy().hasHeightForWidth())
        self.text_question_area.setSizePolicy(sizePolicy)
        self.text_question_area.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.text_question_area.setWidgetResizable(True)
        self.text_question_area.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.text_question_area.setObjectName("text_question_area")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 472, 492, 37))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents_2.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents_2.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_10 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_3.addWidget(self.label_10)
        self.text_question_area.setWidget(self.scrollAreaWidgetContents_2)
        self.widget_2 = QtWidgets.QWidget(self.question)
        self.widget_2.setGeometry(QtCore.QRect(570, 20, 291, 511))
        self.widget_2.setObjectName("widget_2")
        self.install_question_btn = QtWidgets.QPushButton(self.widget_2)
        self.install_question_btn.setGeometry(QtCore.QRect(0, 190, 291, 51))
        self.install_question_btn.setWhatsThis("")
        self.install_question_btn.setStyleSheet("appearance: none;\n"
"backface-visibility: hidden;\n"
"background-color: rgb(194, 251, 215);\n"
"border: 2px solid #005500;\n"
"border-radius: 8px;\n"
"box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"box-sizing: border-box;\n"
"color: #005500;\n"
"cursor: pointer;\n"
"display: inline-block;\n"
"font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"font-size: 16px;\n"
"font-weight: 600;\n"
"letter-spacing: normal;\n"
"line-height: 1.5;\n"
"outline: none;\n"
"overflow: hidden;\n"
"padding: 13px 20px;\n"
"position: relative;\n"
"text-align: center;\n"
"text-decoration: none;\n"
"transform: translate3d(0, 0, 0);\n"
"transition: all .3s;\n"
"user-select: none;\n"
"-webkit-user-select: none;\n"
"touch-action: manipulation;\n"
"vertical-align: top;\n"
"white-space: nowrap;\n"
"")
        self.install_question_btn.setObjectName("install_question_btn")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.widget_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 260, 291, 251))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.line_6 = QtWidgets.QFrame(self.verticalLayoutWidget_2)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.verticalLayout_2.addWidget(self.line_6)
        self.text_question_input = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.text_question_input.setObjectName("text_question_input")
        self.text_question_input.setLineWrapMode(QTextEdit.WidgetWidth)
        self.verticalLayout_2.addWidget(self.text_question_input)
        self.submit_question = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.submit_question.setMinimumSize(QtCore.QSize(0, 40))
        self.submit_question.setStyleSheet("  appearance: none;\n"
"  backface-visibility: hidden;\n"
"  background-color: #27ae60;\n"
"  border-radius: 8px;\n"
"  border-style: none;\n"
"  box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"  box-sizing: border-box;\n"
"  color: #fff;\n"
"  cursor: pointer;\n"
"  display: inline-block;\n"
"  font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"  font-size: 16px;\n"
"  font-weight: 600;\n"
"  letter-spacing: normal;\n"
"  line-height: 1.5;\n"
"  outline: none;\n"
"  overflow: hidden;\n"
"  padding: 13px 20px;\n"
"  position: relative;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  transform: translate3d(0, 0, 0);\n"
"  transition: all .3s;\n"
"  user-select: none;\n"
"  -webkit-user-select: none;\n"
"  touch-action: manipulation;\n"
"  vertical-align: top;\n"
"  white-space: nowrap;")
        self.submit_question.setObjectName("submit_question")
        self.verticalLayout_2.addWidget(self.submit_question)
        self.label_6 = QtWidgets.QLabel(self.widget_2)
        self.label_6.setGeometry(QtCore.QRect(0, 0, 299, 61))
        self.label_6.setObjectName("label_6")
        self.line_7 = QtWidgets.QFrame(self.widget_2)
        self.line_7.setGeometry(QtCore.QRect(0, 240, 291, 20))
        self.line_7.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_7.setLineWidth(3)
        self.line_7.setMidLineWidth(0)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setObjectName("line_7")
        self.label_12 = QtWidgets.QLabel(self.widget_2)
        self.label_12.setGeometry(QtCore.QRect(0, 70, 291, 111))
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.tabWidget.addTab(self.question, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.line_3 = QtWidgets.QFrame(self.tab_2)
        self.line_3.setGeometry(QtCore.QRect(540, 20, 20, 511))
        self.line_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_3.setLineWidth(3)
        self.line_3.setMidLineWidth(5)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setObjectName("line_3")
        self.text_summarizer_area = QtWidgets.QScrollArea(self.tab_2)
        self.text_summarizer_area.setGeometry(QtCore.QRect(20, 20, 511, 511))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_summarizer_area.sizePolicy().hasHeightForWidth())
        self.text_summarizer_area.setSizePolicy(sizePolicy)
        self.text_summarizer_area.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.text_summarizer_area.setWidgetResizable(True)
        self.text_summarizer_area.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.text_summarizer_area.setObjectName("text_summarizer_area")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 472, 492, 37))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents_3.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents_3.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_3)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_11 = QtWidgets.QLabel(self.scrollAreaWidgetContents_3)
        self.label_11.setObjectName("label_11")
        self.verticalLayout_5.addWidget(self.label_11)
        self.text_summarizer_area.setWidget(self.scrollAreaWidgetContents_3)
        self.widget_3 = QtWidgets.QWidget(self.tab_2)
        self.widget_3.setGeometry(QtCore.QRect(570, 20, 291, 511))
        self.widget_3.setObjectName("widget_3")
        self.install_text_summarizer_model = QtWidgets.QPushButton(self.widget_3)
        self.install_text_summarizer_model.setGeometry(QtCore.QRect(0, 190, 291, 51))
        self.install_text_summarizer_model.setWhatsThis("")
        self.install_text_summarizer_model.setStyleSheet("appearance: none;\n"
"backface-visibility: hidden;\n"
"background-color: rgb(194, 251, 215);\n"
"border: 2px solid #005500;\n"
"border-radius: 8px;\n"
"box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"box-sizing: border-box;\n"
"color: #005500;\n"
"cursor: pointer;\n"
"display: inline-block;\n"
"font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"font-size: 16px;\n"
"font-weight: 600;\n"
"letter-spacing: normal;\n"
"line-height: 1.5;\n"
"outline: none;\n"
"overflow: hidden;\n"
"padding: 13px 20px;\n"
"position: relative;\n"
"text-align: center;\n"
"text-decoration: none;\n"
"transform: translate3d(0, 0, 0);\n"
"transition: all .3s;\n"
"user-select: none;\n"
"-webkit-user-select: none;\n"
"touch-action: manipulation;\n"
"vertical-align: top;\n"
"white-space: nowrap;\n"
"")
        self.install_text_summarizer_model.setObjectName("install_text_summarizer_model")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.widget_3)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(0, 260, 291, 251))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_4.addWidget(self.label_4)
        self.line_10 = QtWidgets.QFrame(self.verticalLayoutWidget_3)
        self.line_10.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.verticalLayout_4.addWidget(self.line_10)
        self.text_summarizer_input = QtWidgets.QTextEdit(self.verticalLayoutWidget_3)
        self.text_summarizer_input.setObjectName("text_summarizer_input")
        self.text_summarizer_input.setLineWrapMode(QTextEdit.WidgetWidth)
        self.verticalLayout_4.addWidget(self.text_summarizer_input)
        self.submit_text_summarizer = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.submit_text_summarizer.setMinimumSize(QtCore.QSize(0, 40))
        self.submit_text_summarizer.setStyleSheet("  appearance: none;\n"
"  backface-visibility: hidden;\n"
"  background-color: #27ae60;\n"
"  border-radius: 8px;\n"
"  border-style: none;\n"
"  box-shadow: rgba(39, 174, 96, .15) 0 4px 9px;\n"
"  box-sizing: border-box;\n"
"  color: #fff;\n"
"  cursor: pointer;\n"
"  display: inline-block;\n"
"  font-family: Inter,-apple-system,system-ui,\"Segoe UI\",Helvetica,Arial,sans-serif;\n"
"  font-size: 16px;\n"
"  font-weight: 600;\n"
"  letter-spacing: normal;\n"
"  line-height: 1.5;\n"
"  outline: none;\n"
"  overflow: hidden;\n"
"  padding: 13px 20px;\n"
"  position: relative;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  transform: translate3d(0, 0, 0);\n"
"  transition: all .3s;\n"
"  user-select: none;\n"
"  -webkit-user-select: none;\n"
"  touch-action: manipulation;\n"
"  vertical-align: top;\n"
"  white-space: nowrap;")
        self.submit_text_summarizer.setObjectName("submit_text_summarizer")
        self.verticalLayout_4.addWidget(self.submit_text_summarizer)
        self.label_8 = QtWidgets.QLabel(self.widget_3)
        self.label_8.setGeometry(QtCore.QRect(0, 0, 301, 61))
        self.label_8.setObjectName("label_8")
        self.line_11 = QtWidgets.QFrame(self.widget_3)
        self.line_11.setGeometry(QtCore.QRect(0, 240, 291, 20))
        self.line_11.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_11.setLineWidth(3)
        self.line_11.setMidLineWidth(0)
        self.line_11.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_11.setObjectName("line_11")
        self.label_9 = QtWidgets.QLabel(self.widget_3)
        self.label_9.setGeometry(QtCore.QRect(0, 60, 291, 111))
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        ##connect button to handle
        #=================================================================================
        #Handle  image generate model
        #connect install image generate model
        try:
            self.install_image_btn.clicked.disconnect()
        except TypeError:
            pass  # Ignore if there were no previous connections
        print("Connecting the button signal")
        self.install_image_btn.clicked.connect(self.on_install_image_btn_clicked)

        self.submit_image.clicked.connect(self.on_generative_image_btn_clicked)

        #=================================================================================

        #=================================================================================
        #Handle  question generate model
        #connect install image generate model
        try:
            self.install_question_btn.clicked.disconnect()
        except TypeError:
            pass  # Ignore if there were no previous connections
        print("Connecting the button signal")
        self.install_question_btn.clicked.connect(self.on_install_generative_question_btn_clicked)
        self.submit_question.clicked.connect(self.on_generative_question_btn_clicked)
        #=================================================================================


        #=================================================================================
        #Handle  text summarize generate model
        #connect install image generate model
        try:
            self.install_text_summarizer_model.clicked.disconnect()
        except TypeError:
            pass  # Ignore if there were no previous connections
        # print("Connecting the button signal")
        self.install_text_summarizer_model.clicked.connect(self.on_install_text_summarizer_btn_clicked)
        self.submit_text_summarizer.clicked.connect(self.on_submit_text_summarizer_btn_clicked)
        #=================================================================================
    
    def retranslateUi(self, MainWindow):

        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Group 16"))
        MainWindow.setWindowIcon(QIcon("Ui/icon.png"))
        self.image_label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:20pt; font-weight:600; color:#005f00;\">Image results will be here</span></p></body></html>"))
        self.install_image_btn.setText(_translate("MainWindow", "Install  and load model here"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; color:#005e00;\">Please enter your prompt here:</span></p></body></html>"))
        self.text_image_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\" bgcolor=\"#e6ffef\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.submit_image.setText(_translate("MainWindow", "Generative"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:13pt; font-weight:600; color:#005500;\">GENERATIVE IMAGES</span></p><p align=\"center\"><span style=\" font-size:11pt; font-weight:600; color:#007a00;\">Vũ Bá Đông - 2115208</span></p></body></html>"))
        self.label_13.setText(_translate("MainWindow", "TextLabel"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab1), _translate("MainWindow", "Generative  Image"))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt;\">NoobBot: Hello. Can i help you?</span></p></body></html>"))
        self.install_question_btn.setText(_translate("MainWindow", "Install  and load model here"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; color:#005e00;\">Please enter your prompt here:</span></p></body></html>"))
        self.text_question_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\" bgcolor=\"#e6ffef\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.submit_question.setText(_translate("MainWindow", "Generative"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:13pt; font-weight:600; color:#005500;\">GENERATIVE QUESTIONS</span></p><p align=\"center\"><span style=\" font-size:11pt; font-weight:600; color:#007a00;\">Lê Trần Anh Khôi  - 2111846</span></p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "TextLabel"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.question), _translate("MainWindow", "Generative question"))
        self.label_11.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt;\">Noobbot: Hello. Can i help you?</span></p></body></html>"))
        self.install_text_summarizer_model.setText(_translate("MainWindow", "Install  and load model here"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt; color:#005e00;\">Please enter your prompt here:</span></p></body></html>"))
        self.text_summarizer_input.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\" bgcolor=\"#d9fbe7\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.submit_text_summarizer.setText(_translate("MainWindow", "Generative"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:13pt; font-weight:600; color:#005500;\">TEXT SUMMARIZER</span></p><p align=\"center\"><span style=\" font-size:11pt; font-weight:600; color:#007a00;\">Lê Trung Hòa Hiếu - 2115208</span></p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "TextLabel"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Text summary"))
    def retranslateUi_sub(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.mylabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; color: blue;\">Hello. Can i help you?</span></p></body></html>"))

        #popup 
    def show_popup(self, title, text,elable_click=False):
        self.mgs.setWindowTitle(title)
        self.mgs.setText(text)
        if elable_click:
            self.mgs.setStandardButtons(QMessageBox.Ok)
            self.mgs.exec_()
        else:
            self.mgs.setStandardButtons(QMessageBox.NoButton)
            self.mgs.setWindowModality(Qt.ApplicationModal)
            self.mgs.show()

    #handle for image 
    def on_install_image_btn_clicked(self):
        # Show the message box in the main thread
        self.show_popup(title="PROCESSING",text="Please wait for model load")
        # Submit the model loading task to the executor
        future = self.executor.submit(self.image_model.load_model)
        future.add_done_callback(self.on_model_loaded)  # Add callback for when loading is done

    def on_model_loaded(self, future):
        # Use QTimer.singleShot to ensure the message box closes on the main thread
        self.mgs.done(1)

        try:
            result = future.result()  # Retrieve the result of load_model
            print("Model loaded successfully:", result)
            self.image_model_loaded = True
            print(self.image_model_loaded)
        except Exception as e:
            print(f"An error occurred during model loading: {e}")

    def on_generative_image_btn_clicked(self):
        print('Button clicked for image generation')
        if not self.image_model_loaded:
            self.show_popup(title='ERROR', text='Model is not yet loaded. Please install it.', elable_click=True)
            return
        
        text = self.text_image_input.toPlainText()
        text_format, text_count = self.trim_and_format(text)
        
        if text_count < 20:
            self.show_popup(title='ERROR', text='Prompt is too short.', elable_click=True)
            return
        
        # Show processing popup and submit the image generation task to the executor
        self.show_popup(title="PROCESSING", text="Please wait while the model generates the image.")
        future = self.executor.submit(self.image_model.generate_image, prompt=text_format)
        future.add_done_callback(self.on_image_generated)

    def on_image_generated(self, future):
        # Close the processing popup in the main thread
        self.mgs.done(1)
        
        try:
            # Retrieve the generated image from the future
            pil_image = future.result()
            byte_array = io.BytesIO()
            pil_image.save(byte_array, format='PNG')
            self.generated_image_data = byte_array.getvalue()
            print("Image generation completed successfully.")
            QMetaObject.invokeMethod(self, "update_image_label", Qt.QueuedConnection)

        except Exception as e:
            print(f"An error occurred during image generation: {e}")
            self.show_popup(title='ERROR', text='Failed to generate image.', elable_click=True)
        # if byte_array:
            # self.update_image_label(byte_array)
    @pyqtSlot()  # Registering update_image_label so it can be called by invokeMethod
    def update_image_label(self):
        # Convert image data to QPixmap and display it in the QLabel
        if self.generated_image_data is not None:
            pixmap = QPixmap()
            pixmap.loadFromData(self.generated_image_data)
            self.image_label.setPixmap(pixmap)
            self.text_image_input.setText('')

    def trim_and_format(self,string):
        string = string.strip()
        string = re.sub(r'\s{2,}', ' ', string)
        char_count = len(string)
        return string, char_count    
    def on_install_generative_question_btn_clicked(self):
        # Show the message box in the main thread
        self.show_popup(title="PROCESSING",text="Please wait for model load")
        # Submit the model loading task to the executor
        future = self.executor.submit(self.question_model.load_model)
        future.add_done_callback(self.on_generative_question_model_loaded)  # Add callback for when loading is done

    def on_generative_question_model_loaded(self, future):
        # Use QTimer.singleShot to ensure the message box closes on the main thread
        self.mgs.done(1)

        try:
            result = future.result()  # Retrieve the result of load_model
            print("Model loaded successfully:", result)
            self.question_model_loaded = True
            # print(self.image_model_loaded)
        except Exception as e:
            print(f"An error occurred during model loading: {e}")

    def on_generative_question_btn_clicked(self):
        if not self.question_model_loaded:
            self.show_popup(title='ERROR', text='Model is not yet loaded. Please install it.', elable_click=True)
            return
        text=self.text_question_input.toPlainText()
        text_format, text_count = self.trim_and_format(text)
        if text_count < 5:
            self.show_popup(title='ERROR', text='Prompt is too short.', elable_click=True)
            return
        print(text)
        result=self.question_model.generate_question_answer(input_text=text_format)
        result=result.split('? Answer:')
        if(len(result)>=1):
            result[0]=result[0]+'?'
            result[1]='Answer:'+result[1]
        result='\nNoobBot: '.join(result)
        print(result)
        # print('resut question',result)
        # print('label text',mylabel.text())
        your_label = QtWidgets.QLabel(text)
        your_label.setAlignment(QtCore.Qt.AlignRight)
        your_label.setContentsMargins(50, 0, 0, 0)
        your_label.setWordWrap(True)
        font = QFont()
        font.setPointSize(12)  # Set font size to 12
        your_label.setFont(font)
        your_label.setStyleSheet("color: black; background-color:#dcdcdc")
        # Add the label to the label container's layout
        self.verticalLayout_3.addWidget(your_label)

        self.scrollAreaWidgetContents_2.adjustSize()
        self.text_question_area.verticalScrollBar().setValue(self.text_question_area.verticalScrollBar().maximum())
        self.text_summarizer_input.setText('')
        
        bot_label = QtWidgets.QLabel(f"NoobBot:{result}")
        bot_label.setAlignment(QtCore.Qt.AlignLeft)
        bot_label.setContentsMargins(0, 0, 50, 0)
        bot_label.setWordWrap(True)
        bot_label.setFont(font)
        self.verticalLayout_3.addWidget(bot_label)
        self.scrollAreaWidgetContents_2.adjustSize()
        self.text_question_area.verticalScrollBar().setValue(self.text_question_area.verticalScrollBar().maximum())
        return
    

#handle for text summarizer
    def on_install_text_summarizer_btn_clicked(self):
        # Show the message box in the main thread
        self.show_popup(title="PROCESSING",text="Please wait for model load")
        # Submit the model loading task to the executor
        future = self.executor.submit(self.text_summarizer_model.load_model)
        future.add_done_callback(self.on_text_summarizer_model_loaded)  # Add callback for when loading is done

    def on_text_summarizer_model_loaded(self, future):
        # Use QTimer.singleShot to ensure the message box closes on the main thread
        
        self.mgs.done(1)

        try:
            result = future.result()  # Retrieve the result of load_model
            print("Model loaded successfully:", result)
            self.question_model_loaded = True
        except Exception as e:
            print(f"An error occurred during model loading: {e}")


    def on_submit_text_summarizer_btn_clicked(self):
        if not self.question_model_loaded:
            self.show_popup(title='ERROR', text='Model is not yet loaded. Please install it.', elable_click=True)
            return
        text=self.text_summarizer_input.toPlainText()
        text_format, text_count = self.trim_and_format(text)
        if text_count < 5:
            self.show_popup(title='ERROR', text='Prompt is too short.', elable_click=True)
            return
        result=self.text_summarizer_model.summarize(input_text=text_format)
        print('resut',result)
        # print('label text',mylabel.text())
        your_label = QtWidgets.QLabel(text)
        your_label.setAlignment(QtCore.Qt.AlignRight )
        your_label.setContentsMargins(50, 0, 0, 0)
        your_label.setWordWrap(True)
        font = QFont()
        font.setPointSize(12)  # Set font size to 12
        your_label.setFont(font)
        your_label.setStyleSheet("color: black; background-color:#dcdcdc")
        # Add the label to the label container's layout
        self.verticalLayout_5.addWidget(your_label)

        self.scrollAreaWidgetContents_3.adjustSize()
        self.text_summarizer_area.verticalScrollBar().setValue(self.text_summarizer_area.verticalScrollBar().maximum())
        self.text_summarizer_input.setText('')
        bot_label = QtWidgets.QLabel(f'NoobBot: {result}')
        bot_label.setAlignment(QtCore.Qt.AlignLeft)
        bot_label.setContentsMargins(0, 0, 50, 0)
        bot_label.setWordWrap(True)
        bot_label.setFont(font)
        self.verticalLayout_5.addWidget(bot_label)
        self.scrollAreaWidgetContents_3.adjustSize()
        self.text_summarizer_area.verticalScrollBar().setValue(self.text_summarizer_area.verticalScrollBar().maximum())

